        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:
        3:    4:int reverse(int source)
        -:    5:{
        3:    6:    int reversed = 0;
        6:    7:    while (source > 0)
        -:    8:    {
        3:    9:        reversed *= 10;
        3:   10:        reversed += source % 10;
        3:   11:        source /= 10;
        -:   12:    }
        3:   13:    return reversed;
        -:   14:}
        -:   15:
        -:   16:
        3:   17:int main()
        -:   18:{
        -:   19:    int amount, temp, item;
        -:   20:    int array[10], new_array[10];
        3:   21:    int entered = 0;
        3:   22:    printf("Enter the amount of input numbers:\n");
        3:   23:    temp = scanf("%d", &amount);
        3:   24:    if (temp != 1 || amount > 10)
        -:   25:    {
        1:   26:        printf("Input error");
        1:   27:        return 1;
        -:   28:    }
        -:   29:
        2:   30:    printf("Enter numbers: \n");
        8:   31:    for (int i = 0; i < amount; i++)
        -:   32:    {
        6:   33:        temp = scanf("%d", &item);
        6:   34:        if (temp == 1)
        -:   35:        {
        3:   36:            array[i] = item;
        3:   37:            entered++;
        -:   38:        }
        -:   39:    }
        -:   40:
        2:   41:    if (entered < amount)
        -:   42:    {
        1:   43:        printf("Input error");
        1:   44:        return 1;
        -:   45:    }
        -:   46:
        1:   47:    temp = 0;
        4:   48:    for (int i = 0; i < amount; i++)
        -:   49:    {
        3:   50:        if ((array[i] != reverse(array[i])) || (array[i] == 0))
        -:   51:        {
        2:   52:            new_array[temp] = array[i];
        2:   53:            temp++;
        -:   54:        }
        -:   55:    }
        -:   56:
        3:   57:    for (int i = 0; i < temp; i++)
        -:   58:    {
        2:   59:        printf("%d ", new_array[i]);
        -:   60:    }
        1:   61:    return 0;
        -:   62:}
