        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:4
        -:    1:#include <stdio.h>
        -:    2:
       11:    3:void existence_check(int *array, const int *item, int *counter)
        -:    4:{
       11:    5:    int bool = 0;
       11:    6:    int *end = array + *counter;
       26:    7:    for (int *i = array; i < end; i++)
        -:    8:    {
       15:    9:        if (*item == *i)
        -:   10:        {
        2:   11:            bool = 1;
        -:   12:        }
        -:   13:    }
       11:   14:    if (bool == 0)
        -:   15:    {
        9:   16:        *end = *item;
        9:   17:        (*counter)++;
        -:   18:    }
       11:   19:}
        -:   20:
        4:   21:int main()
        -:   22:{
        4:   23:    int amount, temp = 0;
        -:   24:    int array[10], new_array[10];
        -:   25:    int *index, *end;
        4:   26:    int counter = 0;
        4:   27:    printf("Enter the amount of input numbers:\n");
        4:   28:    temp = scanf("%d", &amount);
        4:   29:    if (temp != 1 || amount > 10 || amount <= 0)
        -:   30:    {
        1:   31:        printf("Input error");
        1:   32:        return 1;
        -:   33:    }
        3:   34:    printf("Enter numbers: \n");
        3:   35:    index = array;
        3:   36:    end = index + amount;
       15:   37:    while (index < end)
        -:   38:    {
       12:   39:        temp = scanf("%d", index);
       12:   40:        if (temp == 1)
        -:   41:        {
       11:   42:            index++;
        -:   43:        }
        -:   44:        else
        -:   45:        {
        1:   46:            fgetc(stdin);
        -:   47:        }
        -:   48:    }
        -:   49:
        3:   50:    index = array;
       14:   51:    for (int *i = index; i < end; i++)
        -:   52:    {
       11:   53:        existence_check(new_array, i, &counter);
        -:   54:    }
        3:   55:    printf("%d", counter);
        3:   56:    return 0;
        -:   57:}
